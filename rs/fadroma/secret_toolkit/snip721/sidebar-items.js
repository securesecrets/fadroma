initSidebarItems({"enum":[["AccessLevel","permission access level"],["Expiration","at the given point in time and after, Expiration will be considered expired"],["HandleMsg","SNIP-721 contract handle messages"],["QueryMsg","SNIP-721 queries"],["TxAction","tx type and specifics"]],"fn":[["add_minters_msg","Returns a StdResult used to execute `AddMinters`"],["all_nft_info_query","Returns a StdResult<`AllNftInfo`> from performing `AllNftInfo` query"],["all_tokens_query","Returns a StdResult<`TokenList`> from performing `AllTokens` query"],["approve_all_msg","Returns a StdResult used to execute `ApproveAll`"],["approve_msg","Returns a StdResult used to execute `Approve`"],["approved_for_all_query","Returns a StdResult<`ApprovedForAll`> from performing `ApprovedForAll` query"],["batch_burn_nft_msg","Returns a StdResult used to execute `BatchBurnNft`"],["batch_mint_nft_msg","Returns a StdResult used to execute `BatchMintNft`"],["batch_send_nft_msg","Returns a StdResult used to execute `BatchSendNft`"],["batch_transfer_nft_msg","Returns a StdResult used to execute `BatchTransferNft`"],["burn_nft_msg","Returns a StdResult used to execute `BurnNft`"],["contract_info_query","Returns a StdResult<`ContractInfo`> from performing `ContractInfo` query"],["inventory_approvals_query","Returns a StdResult<`InventoryApprovals`> from performing `InventoryApprovals` query"],["is_unwrapped_query","Returns a StdResult<`IsUnwrapped`> from performing `IsUnwrapped` query"],["mint_nft_msg","Returns a StdResult used to execute `MintNft`"],["minters_query","Returns a StdResult<`Minters`> from performing `Minters` query"],["nft_dossier_query","Returns a StdResult<`NftDossier`> from performing `NftDossier` query"],["nft_info_query","Returns a StdResult<`Metadata`> from performing `NftInfo` query"],["num_tokens_query","Returns a StdResult<`NumTokens`> from performing `NumTokens` query"],["owner_of_query","Returns a StdResult<`OwnerOf`> from performing `OwnerOf` query"],["private_metadata_query","Returns a StdResult<`Metadata`> from performing `PrivateMetadata` query"],["register_receive_nft_msg","Returns a StdResult used to execute `RegisterReceiveNft`"],["remove_minters_msg","Returns a StdResult used to execute `RemoveMinters`"],["reveal_msg","Returns a StdResult used to execute `Reveal`"],["revoke_all_msg","Returns a StdResult used to execute `RevokeAll`"],["revoke_msg","Returns a StdResult used to execute `Revoke`"],["send_nft_msg","Returns a StdResult used to execute `SendNft`"],["set_global_approval_msg","Returns a StdResult used to execute `SetGlobalApproval`"],["set_metadata_msg","Returns a StdResult used to execute `SetMetadata`"],["set_minters_msg","Returns a StdResult used to execute `SetMinters`"],["set_viewing_key_msg","Returns a StdResult used to execute `SetViewingKey`"],["set_whitelisted_approval_msg","Returns a StdResult used to execute `SetWhitelistedApproval`"],["token_approvals_query","Returns a StdResult<`TokenApprovals`> from performing `TokenApprovals` query"],["tokens_query","Returns a StdResult<`TokenList`> from performing `Tokens` query"],["transaction_history_query","Returns a StdResult<`TransactionHistory`> from performing `TransactionHistory` query"],["transfer_nft_msg","Returns a StdResult used to execute `TransferNft`"],["verify_transfer_approval_query","Returns a StdResult<`VerifyTransferApproval`> from performing `VerifyTransferApproval` query"]],"mod":[["expiration",""],["handle",""],["metadata",""],["query",""]],"struct":[["AllNftInfo","response of `AllNftInfo`"],["AllNftInfoResponse","wrapper to deserialize `AllNftInfo` responses"],["ApprovedForAll","response of `ApprovedForAll`"],["ApprovedForAllResponse","wrapper to deserialize `ApprovedForAll` responses"],["Burn","token burn info used when doing a `BatchBurnNft`"],["ContractInfo","`ContractInfo` response"],["ContractInfoResponse","wrapper to deserialize `ContractInfo` response"],["Cw721Approval","CW-721 Approval"],["InventoryApprovals","response of `InventoryApprovals`"],["InventoryApprovalsResponse","wrapper to deserialize `InventoryApprovals` responses"],["IsUnwrapped","response of `IsUnwrapped`"],["IsUnwrappedResponse","wrapper to deserialize `IsUnwrapped` response"],["Metadata","token metadata"],["Mint","token mint info used when doing a `BatchMintNft`"],["Minters","response of `Minters`"],["MintersResponse","wrapper to deserialize `Minters` response"],["NftDossier","response of `NftDossier`"],["NftDossierResponse","wrapper to deserialize `NftDossier` responses"],["NftInfoResponse","wrapper to deserialize `NftInfo` responses"],["NumTokens","`NumTokens` response"],["NumTokensResponse","wrapper to deserialize `NumTokens` response"],["OwnerOf","response of `OwnerOf`"],["OwnerOfResponse","wrapper to deserialize `OwnerOf` responses"],["PrivateMetadataResponse","wrapper to deserialize `PrivateMetadata` responses"],["Send","send token info used when doing a `BatchSendNft`"],["Snip721Approval","SNIP721 Approval"],["TokenApprovals","response of `TokenApprovals`"],["TokenApprovalsResponse","wrapper to deserialize `TokenApprovals` responses"],["TokenList","response for `AllTokens` and `Tokens`"],["TokenListResponse","wrapper to deserialize `AllTokens` and `Tokens` responses"],["TransactionHistory","response of `TransactionHistory`"],["TransactionHistoryResponse","wrapper to deserialize `TransactionHistory` response"],["Transfer","token transfer info used when doing a `BatchTransferNft`"],["Tx","tx for display"],["VerifyTransferApproval","response of `VerifyTransferApproval`"],["VerifyTransferApprovalResponse","wrapper to deserialize `VerifyTransferApproval` response"],["ViewerInfo","the address and viewing key making an authenticated query request"]]});